{
    "collab_server" : "",
    "contents" : "clean.data <- function(data){\n  data <- data\n  data$Neutral <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Neutral))\n  data$Happy <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Happy))\n  data$Sad <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Sad))\n  data$Angry <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Angry))\n  data$Surprised <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Surprised))\n  data$Scared <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Scared))\n  data$Disgusted <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Disgusted))\n  data$Valence <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Valence))\n  data$Arousal <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Arousal))\n  data$Contempt <- as.numeric(gsub(\"FIT_FAILED\", NA, data$Contempt))\n  data$Gender <- as.factor(gsub(\"FIND_FAILED\", NA, data$Gender))\n  data$Gender <- as.factor(gsub(\"FIT_FAILED\", NA, data$Gender))\n  data$Age <- as.factor(gsub(\"FIT_FAILED\", NA, data$Age))\n  data$Age <- as.factor(gsub(\"FIND_FAILED\", NA, data$Age))\n  data$Beard <- as.factor(gsub(\"FIT_FAILED\", NA, data$Beard))\n  data$Beard <- as.factor(gsub(\"FIND_FAILED\", NA, data$Beard))\n  data$Moustache <- as.factor(gsub(\"FIT_FAILED\", NA, data$Moustache))\n  data$Moustache <- as.factor(gsub(\"FIND_FAILED\", NA, data$Moustache))\n  data$Ethnicity <- as.factor(gsub(\"FIT_FAILED\", NA, data$Ethnicity))\n  data$Ethnicity <- as.factor(gsub(\"FIND_FAILED\", NA, data$Ethnicity))\n  data$Y...Head.Orientation <- as.numeric(gsub(\"FIT_FAILED\", NA,\n                                               data$Y...Head.Orientation))\n  data$X...Head.Orientation <- as.numeric(gsub(\"FIT_FAILED\", NA,\n                                               data$X...Head.Orientation))\n  data$Z...Head.Orientation <- as.numeric(gsub(\"FIT_FAILED\", NA,\n                                               data$Z...Head.Orientation))\n  data$Mouth <- as.factor(gsub(\"FIT_FAILED\", NA, data$Mouth))\n  data$Mouth <- as.factor(gsub(\"FIND_FAILED\", NA, data$Mouth))\n  data$Left.Eye <- as.factor(gsub(\"FIT_FAILED\", NA, data$Left.Eye))\n  data$Left.Eye <- as.factor(gsub(\"FIND_FAILED\", NA, data$Left.Eye))\n  data$Right.Eye <- as.factor(gsub(\"FIT_FAILED\", NA, data$Right.Eye))\n  data$Right.Eye <- as.factor(gsub(\"FIND_FAILED\", NA, data$Right.Eye))\n  data$Left.Eyebrow <- as.factor(gsub(\"FIT_FAILED\", NA, data$Left.Eyebrow))\n  data$Left.Eyebrow <- as.factor(gsub(\"FIND_FAILED\", NA, data$Left.Eyebrow))\n  data$Right.Eyebrow <- as.factor(gsub(\"FIT_FAILED\", NA, data$Right.Eyebrow))\n  data$Right.Eyebrow <- as.factor(gsub(\"FIND_FAILED\", NA, data$Right.Eyebrow))\n  return(data)\n}\n\nrename.aus <- function(data){\n  attach(data)\n  names(data)[names(data)==\"Action.Unit.01...Inner.Brow.Raiser\"] <- \"AU01\"\n  names(data)[names(data)==\"Action.Unit.02...Outer.Brow.Raiser\"] <- \"AU02\"\n  names(data)[names(data)==\"Action.Unit.04...Brow.Lowerer\"] <- \"AU04\"\n  names(data)[names(data)==\"Action.Unit.05...Upper.Lid.Raiser\"] <- \"AU05\"\n  names(data)[names(data)==\"Action.Unit.06...Cheek.Raiser\"] <- \"AU06\"\n  names(data)[names(data)==\"Action.Unit.07...Lid.Tightener\"] <- \"AU07\"\n  names(data)[names(data)==\"Action.Unit.09...Nose.Wrinkler\"] <- \"AU09\"\n  names(data)[names(data)==\"Action.Unit.10...Upper.Lip.Raiser\"] <- \"AU10\"\n  names(data)[names(data)==\"Action.Unit.12...Lip.Corner.Puller\"] <- \"AU12\"\n  names(data)[names(data)==\"Action.Unit.14...Dimpler\"] <- \"AU14\"\n  names(data)[names(data)==\"Action.Unit.15...Lip.Corner.Depressor\"] <- \"AU15\"\n  names(data)[names(data)==\"Action.Unit.17...Chin.Raiser\"] <- \"AU17\"\n  names(data)[names(data)==\"Action.Unit.18...Lip.Puckerer\"] <- \"AU18\"\n  names(data)[names(data)==\"Action.Unit.20...Lip.Stretcher\"] <- \"AU20\"\n  names(data)[names(data)==\"Action.Unit.23...Lip.Tightener\"] <- \"AU23\"\n  names(data)[names(data)==\"Action.Unit.24...Lip.Pressor\"] <- \"AU24\"\n  names(data)[names(data)==\"Action.Unit.25...Lips.Part\"] <- \"AU25\"\n  names(data)[names(data)==\"Action.Unit.26...Jaw.Drop\"] <- \"AU26\"\n  names(data)[names(data)==\"Action.Unit.27...Mouth.Stretch\"] <- \"AU27\"\n  names(data)[names(data)==\"Action.Unit.43...Eyes.Closed\"] <- \"AU43\"\n  detach(data)\n  return(data)\n}\n\nscore.aus <- function(data){\n  AUs <- c(\n    \"AU01\",\"AU02\",\"AU04\",\"AU05\",\"AU06\",\"AU07\",\"AU09\",\"AU10\",\"AU12\",\"AU14\",\"AU15\",\"AU17\",\n    \"AU18\",\"AU20\",\"AU23\",\"AU24\",\"AU25\",\"AU26\",\"AU27\",\"AU43\"\n  )\n\n  data[AUs] <- lapply(data[AUs],\n                      function(x) recode(x, recodes = \"'A'=1; 'B'=2; 'C'=3; 'D'=4;\n                                   'E'=5;'NotActive'=0; else=NA;\", as.factor.result = FALSE))\n  return(data)\n}\n\n\ncreate.epochs <- function(data, sample.rate, epoch){\n  # Make time numeric so that it is easier to work with\n  data$Time2 <- as.numeric(data$Video.Time)\n\n  # The sample rate was 30 fps, so let's divide the data by epochs of 15s\n  sample.rate <- sample.rate\n  # Epochs in seconds\n  epoch <- epoch\n  # Max values for each epoch\n  epoch1 <- epoch*sample.rate\n  epoch2 <- (epoch*2)*sample.rate\n  epoch3 <- (epoch*3)*sample.rate\n  epoch4 <- (epoch*4)*sample.rate\n\n  data$epoch <- ifelse(data$Time2 < epoch1, \"15s\",\n                       ifelse((data$Time2 > epoch1 & data$Time2 <= epoch2), \"30s\",\n                              ifelse((data$Time2 > epoch2 & data$Time2 <= epoch3), \"45s\",\n                                     ifelse((data$Time2 > epoch3 & data$Time2 <= epoch4), \"60s\",\n                                            ifelse(data$Time2 > epoch4, \"60s+\",NA)))))\n\n  data$epoch <- as.factor(data$epoch)\n  return(data)\n}\n\n\n\n",
    "created" : 1460652958978.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2877090931",
    "id" : "CB4E97B5",
    "lastKnownWriteTime" : 1460748056,
    "last_content_update" : 1460748056648,
    "path" : "~/Documents/School Work/facereadeR/R/clean.facereader.R",
    "project_path" : "R/clean.facereader.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}